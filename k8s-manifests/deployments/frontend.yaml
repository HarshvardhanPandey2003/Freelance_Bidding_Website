# k8s-manifests/deployments/frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  revisionHistoryLimit: 2 # Replcas track history and can perform instant rollbacks
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: workload-identity-sa  # NEW: Added for Key Vault access
      volumes: 
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true  
          volumeAttributes:
            secretProviderClass: "app-secrets-provider"
      # This tells the Scheduler how much CPU & Memory your Pod needs, and also sets boundaries.
      containers:
      - name: frontend
        image: harshvardhan2003/freelance-frontend:latest
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        ports:
        - containerPort: 3000
        # CHANGED: Get non-sensitive config from ConfigMap
        envFrom:
        - configMapRef:
            name: app-config
        # NEW: Get sensitive Razorpay key from Key Vault
        env:
        - name: PORT
          value: "3000"
        - name: VITE_RAZORPAY_KEY
          valueFrom:
            secretKeyRef:
              name: frontend-secrets-k8s
              key: VITE_RAZORPAY_KEY
        # NEW: Mount secrets volume
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets"
          readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80   # Service listens here
      targetPort: 3000  # Forward traffic to container’s port
  type: LoadBalancer

# Port 80 - This is the port your Kubernetes Service (frontend-service) exposes to other pods or external users.
# 80 is the default HTTP port. That’s why browsers don’t require you to type it (http://myapp.com instead of http://myapp.com:80).
# TargetPort 3000 - This is the port your frontend container listens on. It’s where your React app runs inside the pod. Its an internal port.