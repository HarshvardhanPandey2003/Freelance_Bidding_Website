Workflow for Experimentation with Branches
Here’s the step-by-step flow for your case (main and exp-code):

1. Check Your Current Branch
bash
git branch
The branch with a * next to it is your current branch (probably main right now).

2. Create and Switch to a New Branch
You can either do this in two steps:

bash
git branch exp-code       # Create a branch named exp-code
git checkout exp-code     # Switch to exp-code
Or in one step:

bash
git checkout -b exp-code
Now you are in the exp-code branch, ready to experiment.

3. Make Your Changes & Commit Them
Example:
bash
# After editing files
git add .
git commit -m "Test experimental feature"

4. If the Experiment Works → Merge into Main
Switch back to main:
bash
git checkout main

# Merge changes from exp-code:
git merge exp-code

# Push the updated main to GitHub:
git push origin main

5. If the Experiment Fails → Delete the Branch
While on main:
git branch -d exp-code        # Delete branch locally
git push origin --delete exp-code   # Delete branch from GitHub


Additional Set of Commands : 

git fetch origin

git checkout production
git pull origin production  # Pull any remote changes
git reset --hard origin/main  # Reset production to main's exact commit
git push origin production --force  # Force-push to GitHub (updates remote)

git checkout development
git pull origin development  # Pull any remote changes
git reset --hard origin/main  # Reset development to main's exact commit
git push origin development --force  # Force-push to GitHub

git checkout main
git log --oneline --graph --all  # All branches should point to the same latest commit
git fetch origin
git status  # Should show no differences

